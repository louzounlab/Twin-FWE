import datetime
import secrets
import os
from flask import Flask, render_template, request
import time

# create an instance of the Flask class, with the name of the running application and the paths for the static files and templates
app = Flask(__name__, static_folder='static', template_folder="templates")

# set the upload folder to the absolute path of the "upload_folder" directory
app.config['UPLOAD_FOLDER'] = os.path.abspath("upload_folder")

# set the lifetime of a session to one hour
app.config["PERMANENT_SESSION_LIFETIME"] = datetime.timedelta(hours=1)

# set the secret key to a random string generated by the secrets module
app.config["SECRET_KEY"] = secrets.token_hex()


def clean_old_files():
    files = os.listdir("static")
    good_files = ["bootstrap", 'ambiguous_data.csv', 'index.css', 'LabQR.jpg',
                  'results.css', 'unambiguous_data.csv', 'yolo_lab.jpg']
    files = list(set(files) - set(good_files))
    for file in files:
        file_time = ""
        i = 0
        ch = file[i]
        while ch.isdigit():
            file_time += ch
            i += 1
            ch = file[i]

        # Time is older than an hour
        if time.time() - float(file_time) > 3600:
            os.remove(os.path.join("static", file))


@app.route('/process_form', methods=['GET'])
def process_form():
    # Read the form data
    cda_type = request.form.get('cda_type')
    if cda_type == "None":
        return render_template("error.html", error="Please select a MCDA/DCDA")

    week = int(request.form.get('week'))
    weight = float(request.form.get('weight'))

    return


@app.route('/', methods=['GET'])
@app.route('/Home', methods=['GET'])
def home():
    return render_template("index.html", active="Home")


@app.route('/Example', methods=['GET'])
def example():
    return render_template("example.html", active="Example")


@app.route('/About', methods=['GET'])
def about():
    return render_template("about.html", active="About")


if __name__ == "__main__":
    app.run(debug=True, host='0.0.0.0', port=5000, use_reloader=True)
